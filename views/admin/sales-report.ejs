<%- include('./partials/header.ejs') %>

<div class="container-fluid">
    <div class="row">
        <%- include('./partials/sidebar.ejs') %>

        <main class="col-md-9 m-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Sales Report</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group me-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="downloadReport('pdf')">Export PDF</button>
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="downloadReport('excel')">Export Excel</button>
                    </div>
                </div>
            </div>

            <!-- Date Range Filter -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <select class="form-select" id="reportType" onchange="toggleCustomDateRange()">
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="monthly">Monthly</option>
                        <option value="yearly">Yearly</option>
                        <option value="custom">Custom Date Range</option>
                    </select>
                </div>
                <div class="col-md-6 custom-date-range" style="display: none;">
                    <div class="row">
                        <div class="col-md-5">
                            <input type="date" class="form-control" id="startDate">
                        </div>
                        <div class="col-md-5">
                            <input type="date" class="form-control" id="endDate">
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <button class="btn btn-primary" onclick="generateReport()">Generate Report</button>
                </div>
            </div>

            <!-- Summary Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Orders</h5>
                            <h2 class="card-text text-white" id="totalOrders">0</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Amount</h5>
                            <h2 class="card-text text-white" id="totalAmount">₹0</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Discount</h5>
                            <h2 class="card-text text-white" id="totalDiscount">₹0</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Net Amount</h5>
                            <h2 class="card-text text-white" id="netAmount">₹0</h2>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Orders Table -->
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Date</th>
                            <th>Status</th>
                            <th>Amount</th>
                            <th>Discount</th>
                            <th>Coupon</th>
                            <th>Net Amount</th>
                        </tr>
                    </thead>
                    <tbody id="ordersTableBody">
                        <tr>
                            <td colspan="7" class="text-center">
                                <p class="my-3">Loading...</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </main>
    </div>
</div>

<script>
function toggleCustomDateRange() {
    const reportType = document.getElementById('reportType').value;
    const customDateRange = document.querySelector('.custom-date-range');
    customDateRange.style.display = reportType === 'custom' ? 'block' : 'none';

    // Set default dates for custom range
    if (reportType === 'custom') {
        const today = new Date();
        const lastMonth = new Date(today);
        lastMonth.setMonth(lastMonth.getMonth() - 1);

        document.getElementById('startDate').value = lastMonth.toISOString().split('T')[0];
        document.getElementById('endDate').value = today.toISOString().split('T')[0];
    }

    // Auto-generate report when type changes (except for custom)
    if (reportType !== 'custom') {
        generateReport();
    }
}

function generateReport() {
    const reportType = document.getElementById('reportType').value;
    let url = '/admin/sales-report?reportType=' + reportType;

    if (reportType === 'custom') {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        
        if (!startDate || !endDate) {
            Swal.fire({
                title: 'Error',
                text: 'Please select both start and end dates',
                icon: 'error'
            });
            return;
        }
        
        url += `&startDate=${startDate}&endDate=${endDate}`;
    }

    // Show loading state
    Swal.fire({
        title: 'Generating Report',
        text: 'Please wait...',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    fetch(url)
        .then(response => response.json())
        .then(data => {
            Swal.close();
            
            if (data.success) {
                updateDashboard(data.report);
            } else {
                throw new Error(data.message || 'Failed to generate report');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: error.message,
                icon: 'error'
            });
        });
}

function downloadReport(type) {
    const reportType = document.getElementById('reportType').value;
    let url = `/admin/sales-report/${type}?reportType=${reportType}`;

    if (reportType === 'custom') {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
        
        if (!startDate || !endDate) {
            Swal.fire({
                title: 'Error',
                text: 'Please select both start and end dates',
                icon: 'error'
            });
            return;
        }
        
        url += `&startDate=${startDate}&endDate=${endDate}`;
    }

    // Show loading state
    Swal.fire({
        title: 'Generating Report',
        text: 'Please wait...',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    // Create a temporary form to handle the download
    const form = document.createElement('form');
    form.method = 'GET';
    form.action = url;
    document.body.appendChild(form);
    form.submit();
    document.body.removeChild(form);

    // Close loading after a delay
    setTimeout(() => {
        Swal.close();
    }, 2000);
}

function updateDashboard(report) {
    // Update summary cards
    document.getElementById('totalOrders').textContent = report.totalOrders;
    document.getElementById('totalAmount').textContent = `₹${report.totalAmount.toFixed(2)}`;
    document.getElementById('totalDiscount').textContent = 
        `₹${(report.totalDiscount + report.totalCouponDiscount).toFixed(2)}`;
    document.getElementById('netAmount').textContent = `₹${report.netAmount.toFixed(2)}`;

    // Update orders table
    const tableBody = document.getElementById('ordersTableBody');
    if (!report.orders || report.orders.length === 0) {
        tableBody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center">
                    <p class="my-3">No orders found for the selected period</p>
                </td>
            </tr>
        `;
        return;
    }

    tableBody.innerHTML = report.orders.map(order => `
        <tr>
            <td>${order._id.toString().slice(-6)}</td>
            <td>${new Date(order.orderDate).toLocaleDateString()}</td>
            <td>
                <span class="badge bg-${getStatusColor(order.orderStatus)}">
                    ${order.orderStatus}
                </span>
            </td>
            <td>₹${order.totalAmount.toFixed(2)}</td>
            <td>₹${((order.discount || 0) + (order.couponDiscount || 0)).toFixed(2)}</td>
            <td>₹${(order.couponDiscount || 0).toFixed(2)}</td>
            <td>₹${order.netAmount.toFixed(2)}</td>
        </tr>
    `).join('');
}

function getStatusColor(status) {
    switch (status) {
        case 'Delivered':
            return 'success';
        case 'Processing':
            return 'primary';
        case 'Shipped':
            return 'info';
        case 'Pending':
            return 'warning';
        case 'Cancelled':
            return 'danger';
        case 'Returned':
            return 'secondary';
        default:
            return 'secondary';
    }
}

// Initialize the page
document.addEventListener('DOMContentLoaded', function() {
    // Set initial report type to daily and generate report
    document.getElementById('reportType').value = 'daily';
    generateReport();
});
</script>

<%- include('./partials/footer.ejs') %>
