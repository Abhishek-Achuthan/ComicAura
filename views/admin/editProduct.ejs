<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ComicAura Admin - Edit Product</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
    <link rel="stylesheet" href="/css/admin/editProduct.css">
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h3>ComicAura</h3>
        </div>
        <nav class="mt-3">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" href="/admin/dashboard">
                        <i class="fas fa-home"></i> Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/product">
                        <i class="fas fa-box"></i> Products
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/user">
                        <i class="fas fa-users"></i> Users
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/category">
                        <i class="fas fa-tags"></i> Categories
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/orders">
                        <i class="fas fa-shopping-cart"></i> Orders
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/logout">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a>
                </li>
            </ul>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="content-header mb-4">
            <h2 class="content-title">Edit Product</h2>
        </div>

        <div class="card">
            <div class="card-body">
                <form id="editProductForm" action="/admin/editProduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-12">
                            <h5 class="mb-4">Current Images</h5>
                            <div class="current-images">
                                <% product.images.forEach((image, index) => { %>
                                    <div class="image-container">
                                        <img src="<%= image %>" alt="Product image <%= index + 1 %>">
                                        <button type="button" class="delete-image" onclick="deleteImage('<%= product._id %>', '<%= image %>')">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                <% }); %>
                            </div>
                        </div>

                        <div class="col-12 mb-4">
                            <label class="form-label">Add New Images</label>
                            <div class="input-group">
                                <input type="file" class="form-control" id="images" name="images" accept="image/*" multiple>
                                <button type="button" class="btn btn-primary" id="addMoreImages">
                                    <i class="fas fa-plus"></i> Add More
                                </button>
                            </div>
                            <small class="text-muted">Select multiple images. Each image will be cropped to a square format.</small>
                            <div id="imagePreview" class="image-preview"></div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Product Name</label>
                            <input type="text" class="form-control" name="name" value="<%= product.name %>" required>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Category</label>
                            <select class="form-control" name="category" required>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>" <%= product.category._id.toString() === category._id.toString() ? 'selected' : '' %>>
                                        <%= category.name %>
                                    </option>
                                <% }); %>
                            </select>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Regular Price</label>
                            <input type="number" class="form-control" name="regularPrice" value="<%= product.regularPrice %>" required>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Sale Price</label>
                            <input type="number" class="form-control" name="salePrice" value="<%= product.salePrice %>">
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Stock</label>
                            <input type="number" class="form-control" name="stock" value="<%= product.stock %>" required>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">Status</label>
                            <select class="form-control" name="status">
                                <option value="In Stock" <%= product.status === 'In Stock' ? 'selected' : '' %>>In Stock</option>
                                <option value="Out of Stock" <%= product.status === 'Out of Stock' ? 'selected' : '' %>>Out of Stock</option>
                            </select>
                        </div>

                        <div class="col-12 mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" rows="4" required><%= product.description %></textarea>
                        </div>

                        <div class="col-12">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                            <a href="/admin/product" class="btn btn-outline-light ms-2">Cancel</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="crop-modal" id="cropModal">
        <div class="crop-modal-content">
            <div class="crop-container">
                <img id="cropImage" src="">
            </div>
            <div class="crop-controls">
                <button class="btn btn-primary" id="cropButton">
                    <i class="fas fa-crop"></i> Crop Image
                </button>
                <button class="btn btn-secondary" id="cancelCropButton">
                    <i class="fas fa-times"></i> Cancel
                </button>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const imageInput = document.getElementById('images');
            const addMoreImagesBtn = document.getElementById('addMoreImages');
            const imagePreview = document.getElementById('imagePreview');
            const cropModal = document.getElementById('cropModal');
            const cropImage = document.getElementById('cropImage');
            let cropper = null;
            let selectedFiles = [];
            let currentFileIndex = 0;
            let currentFiles = [];

            // Delete existing image
            window.deleteImage = function(productId, imageUrl) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/product/${productId}/deleteImage`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ imageUrl })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire(
                                    'Deleted!',
                                    'Image has been deleted.',
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    data.message,
                                    'error'
                                );
                            }
                        });
                    }
                });
            };

            // Image input change handler
            imageInput.addEventListener('change', function(e) {
                e.preventDefault();
                const files = Array.from(e.target.files);
                if (files.length > 0) {
                    currentFileIndex = 0;
                    currentFiles = files;
                    startCropping();
                }
            });

            // Add more images button handler
            addMoreImagesBtn.addEventListener('click', function(e) {
                e.preventDefault();
                imageInput.click();
            });

            // Start cropping process
            function startCropping() {
                if (currentFileIndex < currentFiles.length) {
                    const file = currentFiles[currentFileIndex];
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        cropImage.src = e.target.result;
                        cropModal.style.display = 'block';
                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(cropImage, {
                            aspectRatio: 1,
                            viewMode: 2,
                            autoCropArea: 1
                        });
                    };
                    reader.readAsDataURL(file);
                } else {
                    updateImagePreview();
                }
            }

            // Crop button handler
            document.getElementById('cropButton').addEventListener('click', function() {
                if (cropper) {
                    cropper.getCroppedCanvas().toBlob((blob) => {
                        const file = new File([blob], currentFiles[currentFileIndex].name, {
                            type: 'image/jpeg',
                            lastModified: new Date().getTime()
                        });
                        selectedFiles.push(file);
                        currentFileIndex++;
                        cropModal.style.display = 'none';
                        if (currentFileIndex < currentFiles.length) {
                            startCropping();
                        } else {
                            updateImagePreview();
                        }
                    }, 'image/jpeg');
                }
            });

            // Cancel crop button handler
            document.getElementById('cancelCropButton').addEventListener('click', function() {
                cropModal.style.display = 'none';
                currentFileIndex++;
                if (currentFileIndex < currentFiles.length) {
                    startCropping();
                }
            });

            // Update image preview
            function updateImagePreview() {
                imagePreview.innerHTML = '';
                selectedFiles.forEach((file, index) => {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const div = document.createElement('div');
                        div.className = 'preview-item';
                        div.innerHTML = `
                            <img src="${e.target.result}" alt="Preview ${index + 1}">
                            <button type="button" class="remove-btn" onclick="removeNewImage(${index})">
                                <i class="fas fa-times"></i>
                            </button>
                        `;
                        imagePreview.appendChild(div);
                    };
                    reader.readAsDataURL(file);
                });
            }

            // Remove new image
            window.removeNewImage = function(index) {
                selectedFiles.splice(index, 1);
                updateImagePreview();
            };

            // Form submit handler
            const form = document.getElementById('editProductForm');
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);

                // Remove the original files and append the cropped ones
                formData.delete('images');
                selectedFiles.forEach(file => {
                    formData.append('images', file);
                });

                // Submit the form
                fetch(this.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Product updated successfully'
                        }).then(() => {
                            window.location.href = '/admin/product';
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Error updating product'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while updating the product'
                    });
                });
            });
        });
    </script>
</body>
</html>
