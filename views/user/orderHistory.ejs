<%- include('../partials/header') %>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/common.js"></script>

<style>
.modal-container {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
}

.modal-container:target {
    display: flex;
    justify-content: center;
    align-items: center;
}

.modal-content {
    background: #1a1a1a;
    color: #fff;
    padding: 20px;
    border-radius: 8px;
    max-width: 800px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

.modal-close {
    position: absolute;
    right: 20px;
    top: 20px;
    text-decoration: none;
    color: #fff;
    font-size: 24px;
    background: none;
    border: none;
    opacity: 0.8;
}

.modal-close:hover {
    color: #fff;
    opacity: 1;
}

.order-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1rem;
    background-color: #1a1a1a;
    color: #fff;
    border-radius: 8px;
    overflow: hidden;
}

.order-table th, 
.order-table td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #333;
}

.order-table th {
    background-color: #000;
    color: #fff;
    font-weight: 600;
}

.order-table tbody tr:hover {
    background-color: #2a2a2a;
}

.order-table tbody tr td {
    color: #e0e0e0;
}

.badge {
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    color: white;
    display: inline-block;
}

.badge-success { background-color: #2ecc71; }
.badge-danger { background-color: #e74c3c; }
.badge-primary { background-color: #3498db; }
.badge-warning { background-color: #f1c40f; }

.btn {
    padding: 5px 10px;
    border-radius: 4px;
    text-decoration: none;
    font-size: 14px;
    display: inline-block;
    margin: 0 2px;
    border: none;
    cursor: pointer;
}

.btn-info {
    background-color: #3498db;
    color: white;
}

.btn-danger {
    background-color: #e74c3c;
    color: white;
}

.btn-warning {
    background-color: #f1c40f;
    color: white;
}

.btn:hover {
    opacity: 0.9;
}

.address-box {
    background-color: #2a2a2a;
    padding: 15px;
    border-radius: 4px;
    margin: 10px 0;
    color: #e0e0e0;
}

.payment-box {
    background-color: #2a2a2a;
    padding: 15px;
    border-radius: 4px;
    color: #e0e0e0;
}

.address-box h4,
.payment-box h4 {
    color: #fff;
    margin-bottom: 15px;
}

.address-box p,
.payment-box p {
    margin-bottom: 5px;
    line-height: 1.5;
}

.table-container {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
    overflow-x: auto;
}

.main-content {
    min-height: calc(100vh - 200px); /* Adjust based on your footer height */
    padding-bottom: 60px; /* Add some space before footer */
}

.modal-content .order-table {
    background-color: #2a2a2a;
    margin-top: 15px;
}

.modal-content .order-table th {
    background-color: #000;
    color: #fff;
    border-bottom: 1px solid #333;
}

.modal-content .order-table td {
    border-bottom: 1px solid #333;
    color: #e0e0e0;
}

.modal-content h3 {
    color: #fff;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 1px solid #333;
}

.swal2-popup {
    background: #1a1a1a !important;
    color: #fff !important;
}

.swal2-title, .swal2-html-container {
    color: #fff !important;
}

.swal2-confirm {
    background-color: #e74c3c !important;
}

.swal2-cancel {
    background-color: #95a5a6 !important;
}

.btn-close-white {
    filter: invert(1) grayscale(100%) brightness(200%);
}

.modal-backdrop {
    background-color: rgba(0, 0, 0, 0.5);
}

#rejectionReasonModal .modal-content {
    background-color: #1a1a1a;
    color: #fff;
    border: 1px solid #333;
}

#rejectionReasonModal .modal-header,
#rejectionReasonModal .modal-footer {
    border-color: #333;
}

#rejectionReasonModal .btn-close {
    opacity: 0.8;
    padding: 0.5rem;
}

#rejectionReasonModal .btn-close:hover {
    opacity: 1;
}

#rejectionReasonModal .modal-body {
    padding: 1.5rem;
    font-size: 1rem;
    line-height: 1.5;
}
</style>

<div class="main-content">
    <div class="container mt-5">
        <div class="row">
            <div class="col-12 mt-5">
                <h2 class="mb-4">Order History</h2>
                
                <% if (error) { %>
                    <div class="alert alert-danger"><%= error %></div>
                <% } %>
                
                <% if (orders && orders.length > 0) { %>
                    <div class="table-container">
                        <table class="order-table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Date</th>
                                    <th>Items</th>
                                    <th>Total</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% orders.forEach(order => { %>
                                    <tr>
                                        <td>#<%= order._id.toString().slice(-6) %></td>
                                        <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                                        <td><%= order.items ? order.items.length : 0 %> items</td>
                                        <td>â‚¹<%= order.totalAmount ? order.totalAmount.toFixed(2) : '0.00' %></td>
                                        <td>
                                            <span class="badge badge-<%= 
                                                order.orderStatus === 'Delivered' ? 'success' : 
                                                order.orderStatus === 'Cancelled' ? 'danger' : 
                                                order.orderStatus === 'Returned' || order.orderStatus === 'Return Rejected' ? 'warning' :
                                                'primary' 
                                            %>">
                                                <%= order.orderStatus %>
                                            </span>
                                            <% if (order.returnRequested || order.returnStatus === 'rejected' || order.orderStatus === 'Return Rejected') { %>
                                                <br>
                                                <small class="badge badge-<%= 
                                                    order.returnStatus === 'approved' ? 'success' : 
                                                    (order.returnStatus === 'rejected' || order.orderStatus === 'Return Rejected') ? 'danger' : 
                                                    'warning' 
                                                %>">
                                                    <% if (order.returnStatus === 'rejected' || order.orderStatus === 'Return Rejected') { %>
                                                        Return Rejected
                                                        <button class="btn btn-link btn-sm text-white p-0 ml-1" 
                                                                onclick="showRejectionReason('<%= order._id %>')"
                                                                style="text-decoration: underline; font-size: 0.8em;">
                                                            View Reason
                                                        </button>
                                                    <% } else { %>
                                                        Return <%= order.returnStatus ? order.returnStatus.charAt(0).toUpperCase() + order.returnStatus.slice(1) : 'Pending' %>
                                                    <% } %>
                                                </small>
                                            <% } %>
                                        </td>
                                        <td>
                                            <a href="#modal-<%= order._id %>" class="btn btn-info">View Details</a>
                                            <% if (order.orderStatus === 'Delivered' && !order.returnRequested && !order.isReturned && order.returnStatus !== 'rejected') { %>
                                                <button class="btn btn-warning" onclick="initiateReturn('<%= order._id %>')">
                                                    Return
                                                </button>
                                            <% } else if (order.orderStatus !== 'Cancelled' && order.orderStatus !== 'Delivered' && order.orderStatus !== 'Returned' && order.orderStatus !== 'Return Rejected') { %>
                                                <button class="btn btn-danger" onclick="cancelOrder('<%= order._id %>')">
                                                    Cancel
                                                </button>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>

                    <!-- Order Detail Modals -->
                    <% orders.forEach(order => { %>
                        <div id="modal-<%= order._id %>" class="modal-container">
                            <div class="modal-content">
                                <a href="#" class="modal-close">&times;</a>
                                <h3>Order Details #<%= order._id.toString().slice(-6) %></h3>
                                
                                <div class="table-container">
                                    <table class="order-table">
                                        <thead>
                                            <tr>
                                                <th>Product</th>
                                                <th>Quantity</th>
                                                <th>Price</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if (order.items && order.items.length > 0) { %>
                                                <% order.items.forEach(item => { %>
                                                    <tr>
                                                        <td><%= item.productId ? item.productId.name : 'Product Not Found' %></td>
                                                        <td><%= item.quantity %></td>
                                                        <td>â‚¹<%= item.price ? item.price.toFixed(2) : '0.00' %></td>
                                                        <td>â‚¹<%= item.price ? (item.price * item.quantity).toFixed(2) : '0.00' %></td>
                                                    </tr>
                                                <% }); %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="4" style="text-align: center;">No items found in this order</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td colspan="3" style="text-align: right;"><strong>Subtotal:</strong></td>
                                                <td>â‚¹<%= order.subTotal ? order.subTotal.toFixed(2) : '0.00' %></td>
                                            </tr>
                                            <tr>
                                                <td colspan="3" style="text-align: right;"><strong>Tax:</strong></td>
                                                <td>â‚¹<%= order.taxAmount ? order.taxAmount.toFixed(2) : '0.00' %></td>
                                            </tr>
                                            <tr>
                                                <td colspan="3" style="text-align: right;"><strong>Total:</strong></td>
                                                <td><strong>â‚¹<%= order.totalAmount ? order.totalAmount.toFixed(2) : '0.00' %></strong></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                                <div class="order-info mb-4">
                                    <p><strong>Order Date:</strong> <%= new Date(order.orderDate).toLocaleString() %></p>
                                    <p><strong>Status:</strong> 
                                        <span class="badge badge-<%= 
                                            order.orderStatus === 'Delivered' ? 'success' : 
                                            order.orderStatus === 'Cancelled' ? 'danger' : 
                                            order.orderStatus === 'Returned' || order.orderStatus === 'Return Rejected' ? 'warning' :
                                            'primary' 
                                        %>">
                                            <%= order.orderStatus %>
                                        </span>
                                    </p>
                                    <% if (order.returnRequested || order.returnStatus === 'rejected' || order.orderStatus === 'Return Rejected') { %>
                                        <p>
                                            <strong>Return Status:</strong>
                                            <span class="badge badge-<%= 
                                                order.returnStatus === 'approved' ? 'success' : 
                                                (order.returnStatus === 'rejected' || order.orderStatus === 'Return Rejected') ? 'danger' : 
                                                'warning' 
                                            %>">
                                                <% if (order.returnStatus === 'rejected' || order.orderStatus === 'Return Rejected') { %>
                                                    Return Rejected
                                                    <button class="btn btn-link btn-sm text-white p-0 ml-1" 
                                                            onclick="showRejectionReason('<%= order._id %>')"
                                                            style="text-decoration: underline; font-size: 0.8em;">
                                                        View Reason
                                                    </button>
                                                <% } else { %>
                                                    <%= order.returnStatus ? order.returnStatus.charAt(0).toUpperCase() + order.returnStatus.slice(1) : 'Pending' %>
                                                <% } %>
                                            </span>
                                        </p>
                                        <% if (order.returnReason) { %>
                                            <p><strong>Return Reason:</strong> <%= order.returnReason %></p>
                                        <% } %>
                                    <% } %>
                                </div>

                                <div class="shipping-box mb-4 p-3 bg-dark border border-secondary rounded">
                                    <h4 class="mb-3">Shipping Address</h4>
                                    <% if (order.shippingAddress) { %>
                                        <div class="address-details">
                                            <p class="mb-2"><strong><%= order.shippingAddress.name %></strong></p>
                                            <p class="mb-2"><%= order.shippingAddress.street %></p>
                                            <p class="mb-2">
                                                <%= order.shippingAddress.city %>, 
                                                <%= order.shippingAddress.state %> - 
                                                <%= order.shippingAddress.pinCode %>
                                            </p>
                                            <p class="mb-2"><i class="fas fa-phone me-2"></i><%= order.shippingAddress.phoneNumber %></p>
                                        </div>
                                    <% } else { %>
                                        <p class="text-muted mb-0">Address information not available</p>
                                    <% } %>
                                </div>

                                <div class="payment-box p-3 bg-dark border border-secondary rounded">
                                    <h4 class="mb-3">Payment Information</h4>
                                    <div class="payment-details">
                                        <p class="mb-2">
                                            <strong>Method:</strong> 
                                            <span class="badge bg-info">
                                                <%= order.paymentMethod ? order.paymentMethod.toUpperCase() : 'N/A' %>
                                            </span>
                                        </p>
                                        <p class="mb-2">
                                            <strong>Status:</strong> 
                                            <span class="badge <%= order.paymentStatus === 'Paid' ? 'bg-success' : 'bg-warning' %>">
                                                <%= order.paymentStatus || 'N/A' %>
                                            </span>
                                        </p>
                                        <p class="mb-0">
                                            <strong>Amount:</strong> â‚¹<%= order.totalAmount ? order.totalAmount.toFixed(2) : '0.00' %>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>

                    <!-- Pagination -->
                    <% if (totalPages > 1) { %>
                        <div class="pagination" style="text-align: center; margin-top: 20px;">
                            <% if (currentPage > 1) { %>
                                <a href="/order-history?page=<%= currentPage - 1 %>" class="btn btn-info">Previous</a>
                            <% } %>

                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <a href="/order-history?page=<%= i %>" 
                                   class="btn <%= currentPage == i ? 'btn-primary' : 'btn-info' %>">
                                    <%= i %>
                                </a>
                            <% } %>

                            <% if (currentPage < totalPages) { %>
                                <a href="/order-history?page=<%= currentPage + 1 %>" class="btn btn-info">Next</a>
                            <% } %>
                        </div>
                    <% } %>
                <% } else { %>
                    <div style="text-align: center; padding: 50px 0;">
                        <i class="fas fa-shopping-bag" style="font-size: 48px; margin-bottom: 20px;"></i>
                        <h4>No orders yet</h4>
                        <p style="color: #666;">Start shopping to see your orders here!</p>
                        <a href="/shop" class="btn btn-info">Shop Now</a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Rejection Reason Modal -->
<div class="modal fade" id="rejectionReasonModal" tabindex="-1" role="dialog" aria-labelledby="rejectionReasonModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header border-secondary">
                <h5 class="modal-title" id="rejectionReasonModalLabel">Return Request Rejection Reason</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="rejectionReasonText">
            </div>
            <div class="modal-footer border-secondary">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
async function cancelOrder(orderId) {
    try {
        const result = await Swal.fire({
            title: 'Cancel Order',
            text: 'Are you sure you want to cancel this order?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, cancel it!',
            cancelButtonText: 'No, keep it',
            background: '#1a1a1a',
            color: '#fff',
            confirmButtonColor: '#e74c3c',
            cancelButtonColor: '#95a5a6'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/cancel-order/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire({
                    title: 'Cancelled!',
                    text: 'Your order has been cancelled.',
                    icon: 'success',
                    background: '#1a1a1a',
                    color: '#fff',
                    confirmButtonColor: '#3498db'
                });
                location.reload();
            } else {
                throw new Error(data.message || 'Failed to cancel order');
            }
        }
    } catch (error) {
        console.error('Error cancelling order:', error);
        await Swal.fire({
            title: 'Error!',
            text: error.message || 'Failed to cancel order',
            icon: 'error',
            background: '#1a1a1a',
            color: '#fff',
            confirmButtonColor: '#e74c3c'
        });
    }
}

async function initiateReturn(orderId) {
    try {
        const { value: returnData } = await Swal.fire({
            title: 'Return Order',
            input: 'textarea',
            inputLabel: 'Please enter reason for return',
            inputPlaceholder: 'Enter your reason here...',
            showCancelButton: true,
            confirmButtonText: 'Submit',
            cancelButtonText: 'Cancel',
            background: '#1a1a1a',
            color: '#fff',
            confirmButtonColor: '#3498db',
            cancelButtonColor: '#95a5a6',
            inputValidator: (value) => {
                if (!value || !value.trim()) {
                    return 'Please enter a reason for return';
                }
            }
        });

        if (returnData) {
            const response = await fetch(`/initiate-return/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ reason: returnData })
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire({
                    title: 'Return Initiated!',
                    text: 'Your return request has been initiated.',
                    icon: 'success',
                    background: '#1a1a1a',
                    color: '#fff',
                    confirmButtonColor: '#3498db'
                });
                location.reload();
            } else {
                throw new Error(data.message || 'Failed to initiate return');
            }
        }
    } catch (error) {
        console.error('Error initiating return:', error);
        await Swal.fire({
            title: 'Error!',
            text: error.message || 'Failed to initiate return',
            icon: 'error',
            background: '#1a1a1a',
            color: '#fff',
            confirmButtonColor: '#e74c3c'
        });
    }
}

function showRejectionReason(orderId) {
    const orders = <%- JSON.stringify(orders) %>;
    const order = orders.find(o => o._id === orderId);
    if (order && order.rejectionReason) {
        document.getElementById('rejectionReasonText').textContent = order.rejectionReason;
        const modal = new bootstrap.Modal(document.getElementById('rejectionReasonModal'));
        modal.show();
    } else {
        Swal.fire({
            title: 'No Reason Available',
            text: 'No rejection reason was provided.',
            icon: 'info',
            background: '#1a1a1a',
            color: '#fff'
        });
    }
}

document.addEventListener('DOMContentLoaded', function() {
    const rejectionModal = document.getElementById('rejectionReasonModal');
    rejectionModal.addEventListener('hidden.bs.modal', function () {
        document.getElementById('rejectionReasonText').textContent = '';
    });
});
</script>

<%- include('../partials/footer') %>
